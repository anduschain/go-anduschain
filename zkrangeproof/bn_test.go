// Copyright 2017 ING Bank N.V.
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package zkrangeproof

import (
	"fmt"
	"math/big"
	"testing"
	"time"
)

func TestCalculateHash(t *testing.T) {

	a := GetBigInt("20905485153255974750600830283139712767405035066172127447413526262122898097752829902691919420016794244099612526431387099905077116995490485444167190551980224865082320241670546533063409921082864323224863076823319894932240914571396941354556281385023649535909639921239646795929610627460276589386330363348840105387073757406261480377763345436612442076323102518362946991582624513737241437269968051355243751819094759669539075841991633425362795570590507959822047022497500292880734028347273355847985904992235033659931679254742902977502890883426551960403450937665750386501228142099266824028488862959626463948822181376617128628357")
	b := GetBigInt("5711912074763938920844020768820827016918638588776093786691324830937965710562669998102969607754216881533101753509522661181935679768137553251696427895001308210043958162362474454915118307661021406997989560047755201343617470288619030784987198511772840498354380632474664457429003510207310347179884080000294301502325103527312780599913053243627156705417875172756769585807691558680079741149166677442267851492473670184071199725213912264373214980177804010561543807969309223405291240876888702197126709861726023144260487044339708816278182396486957437256069194438047922679665536060592545457448379589893428429445378466414731324407")

	expectedResult := GetBigInt("-19913561841364303941087968013056854925409568225408501509608065500928998362191")
	actualResult, _ := CalculateHash(a, b)
	actualResult2, _ := CalculateHash(a, b)

	if expectedResult.Cmp(actualResult) != 0 {
		t.Errorf("Assert failure: hashed is: %s", actualResult)
	}
	if expectedResult.Cmp(actualResult2) != 0 {
		t.Errorf("Assert failure: hashed 2 is: %s", actualResult2)
	}
}

func TestModPow1(t *testing.T) {

	base := big.NewInt(10)
	exponent := big.NewInt(3)
	modulo := big.NewInt(7)

	result := ModPow(base, exponent, modulo)

	if result.Cmp(big.NewInt(6)) != 0 {
		t.Errorf("Assert failure: expected 6, actual: %s", result)
	}
}

func TestModPow2(t *testing.T) {

	base := big.NewInt(30)
	exponent := big.NewInt(2)
	modulo := big.NewInt(7)

	var result = ModPow(base, exponent, modulo)

	if result.Cmp(big.NewInt(4)) != 0 {
		t.Errorf("Assert failure: expected 4, actual: %s", result)
	}
}

func TestModPowNegativeExp1(t *testing.T) {

	result := ModPow(big.NewInt(16), big.NewInt(-1), big.NewInt(7))

	if result.Cmp(big.NewInt(4)) != 0 {
		t.Errorf("Assert failure: expected 4, actual: %s", result)
	}
}

func TestModPowNegativeExp2(t *testing.T) {

	result := ModPow(big.NewInt(34), big.NewInt(-2), big.NewInt(9))

	if result.Cmp(big.NewInt(7)) != 0 {
		t.Errorf("Assert failure: expected 7, actual: %s", result)
	}
}

func TestModInverse1(t *testing.T) {

	base := big.NewInt(5)
	modulo := big.NewInt(1)

	var result = ModInverse(base, modulo)

	if result.Cmp(big.NewInt(0)) != 0 {
		t.Errorf("Assert failure: expected 0, actual: %s", result)
	}
}

func TestModInverse2(t *testing.T) {

	base := big.NewInt(3)
	modulo := big.NewInt(7)

	var result = ModInverse(base, modulo)

	if result.Cmp(big.NewInt(5)) != 0 {
		t.Errorf("Assert failure: expected 5, actual: %s", result)
	}
}

func TestMultiply(t *testing.T) {

	factor1 := big.NewInt(3)
	factor2 := big.NewInt(7)

	var result = Multiply(factor1, factor2)
	if result.Cmp(big.NewInt(21)) != 0 {
		t.Errorf("Assert failure: expected 21, actual: %s", result)
	}
}

func TestMod(t *testing.T) {

	result := Mod(big.NewInt(16), big.NewInt(7))

	if result.Cmp(big.NewInt(2)) != 0 {
		t.Errorf("Assert failure: expected 2, actual: %s", result)
	}
}

func GetValidProof() []*big.Int {
	var proof [22]*big.Int
	proof[0] = GetBigInt("4113828195695091752272760725836149716284486087849462613778234418278292352490024310453930868055332998414205288306776883401689813599948209306731917976208985337926626094334714771708320698215997108389691368970666818894469646225485595194328633319923640527386563973619556258876112545961679795946002570974454454602957668997805081465854455397437458383370952387110462360187858970596097102035495470096951163398081636769634993532757418713023075541816425241947778784448082170518193447641650105050838755844030798543071500131696846563263620776288903728074205788465674317651576549706537149579179385987669173796068258247411588490594")
	proof[1] = GetBigInt("3613846924423350262314241077467904340225890557352654872719226234384904911411258395318601424789204528480658092657305340296620587418149572512260965743109423876795626733431058549289071570570151354525997302794301944939920998916231275663731911549602879320440777040007615349871143919461470564164616295561224907656381808976820255045574302967467233741913942023743618888766499369736795542535832550521659259762943616879453712515093394355641728435331226399262838883973429736617428586077772630819684460445770069229819924686304050477660817270895445480203541162780104162084406547889212225641233409321872792140038678567236226870620")
	proof[2] = GetBigInt("1187801963413487932724149778430308126425911004153448501182205023523346797515104094771325410159119441530281305656771850673271243886109490580420927976040069330310283048453448116304914191601113122809659442585228312313567226510058495678009618247658283861533131370163703634962399701325517792919017729208199524866411226900198578958147828549324196290713767032288624406265836532612772031332414396104525771853421160374867902369664706984453489920466398036964048888899806588748234685454280902794445599198780052299572541058866200643053909001942891332422132259674264692116103299026784130677849131492379809340680901650236121332705")
	proof[3] = GetBigInt("3922353836101057770662397278477246324296202780319814843996742299312264131340770597781239439686663288039961439027959675506608607322228068167583823337833443822167349884171380587037312508348444474334901526530537290423116473394236382411508212011783587912182661595721628350504095649117297851355107548333589292089175439085608590329522854588415921886307264053556658991923113064669451687524690985086331970585511964146862317236246083107710328045503896108549515166445549548718300437525960567519953020328805020729456389911103379882620888866353016919663132293571445821705891332156510739742705990985179874569112176054181195678803")
	proof[4] = GetBigInt("5132960623852471792238126872768858847570963030339376500656385524234187726525154394325966031367421338472019469038201300451269142160245048926282172754580149354962485820297051073986310630016732237935984442948015486891027966149761509556098844443896177091696318929944824889470674535577967275497394505596729624336516534788526087130001679234784604801724353522396485698725757864358891080224855909592658382990275216313197335098372465067939626882582581130968988115875675375102052747349254271329097532363286230333335526352895703978192638002603065932445605147266875214110962735379341663979548357088378661934999658174549792694147")
	proof[5] = GetBigInt("39126854474369787413480501657795216460981175954107831760004128679539931236901")
	proof[6] = GetBigInt("992996163009264089919948494480864783402396595869453848280289546987461404264712126579000812113219732279317384866878817639433556314147300479517565130142451453725170996340563254013570199387221413698527361921992553372217830792880263365899907878409464869175419008080075587678899159632382492014582154525177063287969139184799798660563337318745408583953446229324403381572139385005136030739929249992782062745463946042621719518917141125661017844299655537639522425111443545717117335285771218443600850837502871465247110092927628812159627250692191018390703717298382420868330157591345679406768938877772296388031528874777072524545984848221470211469927316444360259284599550559873505699860810678956557443204109")
	proof[7] = GetBigInt("-2931430913105319960130984762604843156999141151369463796570440743145031469703224280702232936989208804250294756172549351203896168105592021807203929166352156691368993014747970283936985127795185822290490937699501298296269497505049381529843928530734035400806714217292661631559115184281217471026035563674178278501792016591144054748363967976140043424580306062958297697940607902730628424849448200599203857210062374445647791028122019412883491833109643544012842210472344076115361787423642309875011521230913098659307634814447000520951627027897778504054137724363652780796678289092710487166234553316151653826762974554633691066438832376678606313636859963351374642746437921944669156682146863434391256226926444739217407725247051713864456688636201384293848454668814770379850908005414403492722166464927841679623804756750657390637313871830540075163908844468967699550277090714736")
	proof[8] = GetBigInt("74396464728518449689021967311799406171254825734031133044475055916334017434368252824743755098810334342091677255045207535164783958590757165777222098548036038321014557247186452747272676459776951950014112388779432333525280935356205570096554938268183684429601979055730658714374926122849000164483285749272120468002315068297093468952127902451033219243005083447204451794651191793768285893007654965567230025501028332233786923376198474953969536008803708069028342536334988639351612486557483043523637811831989592638877163150719157186615883127670120571829632787483390443911917389303847971729812946641720743640357478184020201277364824398748556426080260515428567296085279925855670635228654884010682897863036261904752446207628404736850855965303886220040391404107451838259830931930311827390911096026172227243621880312873218282893137481589212490965735973967480635113856486987345562737825449807217915736317717219004936813828032644472277956107618662762850748935260863705706509515156881747842490142529484484041389665818890027635337276060277406694204363554612237432860415964424913408843506659544965142037737221590586051001206005206881388223664809312689502065836505940416787566683787915974153276604770785975435347447311870715157922834907200461663599888198714864681909078311991659451638776600338553095408304697611454269945244880393630978385570313038416733601783547345184410441427017193771611630048710429303106252665499841960781615502123712603544209140550876228789369621298059506688206596694195263252")
	proof[9] = GetBigInt("4095237793581820854230104777897243880912381890425539513640627413478442708220509962470140897373891722773813339604390740442745495526761729531065044787543264883547850795672217245908296896553326404758546587436709982612734819223396286711843216787230993209744155114962892164019016292585982538853232156499186192778549659512134158649466713176645743555440914903494384406322230484724377795791633247528210185471193589756057475558172896972880208988193630700607730300788441806232269720567974095562284101222241027847008262126549217612265601938654663695528384274688037989293656329117202030121361953636289722747208221377557606856887")
	proof[10] = GetBigInt("13435549214679360550428462601039958685792359955613281615292512497498262503257")
	proof[11] = GetBigInt("348182605953836986831050639900197038578196687744373789372557787781314231448131925457056482661720724316494197978884774084144700686692636372239730136145295547049474739672915942082091787568302957335750456618948626641253395944288170525351426196274621787010403705200336218896872855223822241982047343378659880890900914187602647026646020885805541247052796479577935398867900923711211284080855203721317825958530268029923583823170435563004136848098600063400803476428000379381659980542691097910688708411412430424155276920647883154818619284341653479209425385410403733680519822713973781541703735261946541941425687372201488971798201454356963321963417657679265082728392253009209839373415802247598075912340792")
	proof[12] = GetBigInt("508722952663197218662847694169405657757907729739412065418498882223814633298766097958118806220428130230249559690660951032859850614789667477800666223696551297129596186397078613205163474960358634600505583140405736582784357137448932286386294346344014565920655259934903437343318123327937693082553536301281382840650425122246061733601487007086781870569041902620726094653889454770960069668011933670622703956329697833377579617178933618628437233884832785831925906553252202988671889875761797605378810063060879429125936602941845649750814657150762944258099066559603114586456783555587576483510929317829820426365196572915758856463939823654673317288847727428446262630132655121654666439774467296253126455523464394013401826699408201635641665752975744942493351284456018923301293520304159499935091019558658963657258270999814060756896089947891142873473195757105954015491780731268")
	proof[13] = GetBigInt("-2922519026831103233159072670622003659108771002398589135621725134941269133344127081700580994622223091271623180998619829005349665348603045496077080015046527768951401229481367259230660287360372732337347572396470635438614412876616992832785161449183005607057039475048281155985154930708566783101356145541028697187158461342793565740698651490714951551066888428824797420994891704339127058522234198978069534715041084374761238179606110195761345649632870553777112201221582767342306135330601986968085473482157726848350031427555200973962303512533297271474068568027042705891695930930666909517863581422253842674124544641208132364744392294313025124625726024499510931261395939528537214152432724433742789503020566669319078012486730462447621237287019042954918294339688473961693647873800380989983777534058503419406230226620690056932025518645023959580193355251374898842286023126399643203779755808544923982970984016138182246796625480341758998412483688354115947569300221073011118514938733425623871311628227778401825308276969039721123079208854110335192523020924845800225976599997377105300612073331848940086190883674370853556410240196352840248433744881087815730494366602372753803329118591742052571649530499362574124331741918989257029473993737923029231288179550546839252314986636743646079551461038623368322050025972822098604703014137607027972982069071049105478787006336458267558509635508857477693588631297184647257385305311267076412603587262840031924191593774786560389261721044561012826299816784567011310857855309815763694772913585009368340728913349509869351316565215846226552191217591393042640240264799567564154004065033707941127617960715248588548658208974743516271583946704478986455226422715320778652109513432859124645342622298123995266332916684475299805594764106577765752351817071255153656129548262930448448972082169446936865863674847297923458005979369826699960642453159515403403797558662819130134308737489463338365184374085004400309597302336016150371843205900026955217285434529591809951332344119406321485960143565904141864278315646322049863191212014255634037868616867276998460286536472703217283659778183229914897159")
	proof[14] = GetBigInt("8109192933040651667441377800337050667178793041829501975066850930447268409722")
	proof[15] = GetBigInt("16149495026867902409990921991733941885536290830887114107313365242479403514385424104040578400990626334530121837077445068890296519")
	proof[16] = GetBigInt("547727166016263208860580033262329830093098983859732452519714640968972817728662987367443415387931261567921123217039264310447708842908538363409394976393681892000027043462672059817883897964597479953187198019388178916029895180102532121972258953199022973363361742863575180500300802952990231732602897778663971501337012350454582177326087303720629071723784710462575198377647517252115790686270795660139143027593089742602617057965733479806048689560210866929103449750144721096981284652121190674099318820215513114748423448464231235383055864739643580655243734386703483317047148445064244956754110546763345424655988655397280645976545372313198479429833356791229995917619454794400660361125951820966200242313950804129093382586288592670138573690974371062181780998923521906880124991554313515452709031589452891166097515904270261150255942837822448850005414398286325941320851145859")
	proof[17] = GetBigInt("26180606731854129492904527746229553373086049774418308780688621251418683393831759971002522944402863429938442049219055007133378941968529353291642268089394828052116441225041055216232873262486882269902822995442041432341915928356354403882493551199221519684181950430011178943819330187603744975967357428691831213854261398494207413843782310620131636899149864771679764912979217491366747671934265980562431169798017644621993804570745260837654636357866784216068767213021805578066291793056074805032061177356119564243442434198421689676099856848655134620213524468797715587663371021781417954494676811868981930976992957202650420233871565782080588077009926673882522083591549221852658344591611630843812596412053275542158499274814788475822479110108601641238490269126904353167091353453261161348991140155032514028748524342799216088099316446341685454764817")
	proof[18] = GetBigInt("-217521366647076002276460694246711079695570532030716810604662993702061833193170635845041931760505459799820080232344340444676046568522241922699640424500959804237097994020799906970764771629098123220183987972185350730800103766544079650580965830790457416569724229163817461881296107531635889151034812373657061994857122975719781074201893037586679261197451908214233133180590660095799077982607491611196076370933520757043269017015758846888382626580034404504218201099027890162522192655825078544972693515972297261352935665622418173012987974270306889456573762466750615999246206063673380281288470162909179429264483680999071684263425926729399648953693767644933876682375719142585866025186799879099769360786050450012487669287776538546630936137570989947817154315506277994648871076839392322667733435548363076065939336782019856945831022832689974429595432502761880186287532972877662989435963937055802522394272380309776005627368443894153009882775767429173659453677723777715606848883074161409830062234394560120292404693238465420699970426190745713820541878138618322376645909973374591236891427644732811849286615312970319059811823704416500524560314320164716022189154548309800297532152609040870310706055653851599285576907273330543965740475732413210972813466478699159411601435854267015230687482370410095459225485104763436525982891623906147978062410550989754492260736649502602771199905079538216850425808125176284848477672811814392416995728161353020080229820009688352959879858781073949922496231577929351803835385567064869312941417149315870621423197335330589910084969675298162376873549670283747814799913372104334824165181302020853237521407771553770148513580304737951590615031554778332678918558627076681891596580926860481395257737445278067059827270370444567035511505439044879237697825549284482503134225229509983132516912294986361915241770421090812021047420846933632994884198702913337991251449106432771524432758473093624293076596659512512415670296568139574892046656740761572365342304929232617125858645924680040708049979780784652607468758624909635198")
	proof[19] = GetBigInt("-217521366647076002276460694246711079695570532030716810604662993702061833193170635845041931760505459799820080232344340444676046568522241922699640424500959804237097994020799906970764771629098123220183987972185350730800103766544079650580965830790457416569724229163817461881296107531635889151034812373657061994857122975719781074201893037586679261197451908214233133180590660095799077982607491611196076370933520757043269017015758846888382626580034404504218201099027890162522192655825078544972693515972297261352935665622418173012987974270306889456573762466750615999246206063673380281288470162909179429264483680999071684263425926729399648953693767644933876682375719142585866025186799879099769360786050450012487669287776538546630936137570989947817154315506277994648871076839392322667733435548363076065939336782019856945831022832689974429595432502761880186287532972877662989435963937055802522394272380309776005627368443894153009882775767429173659453677723777715606848883074161409830062234394560120292404693238465420699970426190745713820541878138618322376645909973374591236891427644732811849286615312970319059811823704416500524560314320164716022189154548309800297532152609040870310706055653851599285576907273330543965740475732413210972813466478699159411601435854267015230687482370410095459225485104763436525982891623906147978062410550989754492260736649502602771196891473762980632578882832077049729429805593031602202759435754079839065041534882051027988707689319939962609922616120342359236356463882315484265090497946146713529134117560729709143422639327850899474213491199075340355148220783929586890257951769833197029832737498125972216447411657684300847830092310714914771925952641258047342049853417695450328064286479653758218916007457794563104747644326329739407371634440875154915268633427109979719912371989173708658734812425916068875177236805118323237426901769499628438789306694961774671814789274333061713404048899156792124408144918464255008141852483072197145751041259633186228281687797668285745683963881714617822882739944489806584")
	proof[20] = GetBigInt("9139468013759844200542739985674626503079497561139375048606453184668184383104630036921086575211165281772346406085919169488209601168887304524844611907483286534931218008316115579835859427079329432366009242894940262107937184621295121686229284065866203413683976937710819457964755078850565268599581035472980033707139142489861905184422049225618953539878681313239267451608254501557364451538840009671392994952521251048081320870735401818543338140630091206297839434186346538570399791240308052391234394312778872988932315465288770587287673625127851389060768522704917646691842689543661044790402534955904920498894480310461706337411702032175161382810781978595062114963026919049733427802536423233498557749054855678912775301790581159814316229399344916969788637163172683880062586705724337119335736072044258647532867780983506932224565080719129562731396540880980423149018219465161656313583549001739913245776774419922140498926025390255343710726085864761687530026901269117330975983931890283064751433062658491359481590214986699606315995489135026612440886567127586741259533357124815112915267311946782090736386513563341671618865383166253780434588529529178000906379905255902628380466641419341539637512665454597430980834214433379066045232096140678711242680965966173664175134282335121304026673997689630901459112")
	proof[21] = GetBigInt("14575423661246799564862200758544222700334484598767635839026218824180958602743387563341325271370507120923132524595855094418704414088067765317044862042779506613318310321149237495231247768249775529993798156803960861142009520458088656769571629669705006904720854782316383579595590030205123061225626394397684604120821155581229105961124351202032092196387679193305107564576897038063341575932375795143906047044440281837927737681049700934308178541132301926407760101184950520527807752028591170894552650413080038191247422875286782185460045675035357975121881744603077316626439172759953807519288642217043654029444894433900260891522455952190179639905008857863757637077700992949892122458715973330603349169065875179361125453271126652047510916144439377282246515210351893690809180658968654294099559116546471660078654025638671738661981705596610711325603587381604705471712219710416410633213400901008908631773781052551722237296451399779053248013811559777704614739525013704873388801791843701637700420836456690802361493019512654664625214376184264470638926620210485329831269915645231772789844371169278746616194664553483251446364521784803807796959038517530719852688634073866657288153088060968312689686915595076829089135654902715245518021071386027701351130235055999611759772709308555684512698024648099880702622")
	return proof[:]
}

func GetValidCommitment() []*big.Int {
	var commitment [4]*big.Int
	commitment[0] = GetBigInt("570826151294620675396962195303156680162033780687749142741212479180268667733721930362297783718442877228729456825764525978608198253410968482299481876059619549210363785944888140851030061651059428665243195435847642368504997422376075855350230172527450360855083611624650293071105721144799580486782352994631862633865709961046012007363173359656281899123515121202994730990712555522621367439110820784469062291534490136675326220958344195544872707970777997055210646212016597973301539115438529837701569939882197809998978489188634941355429707342563406517095258277651562571322484313255638695630347460493257995265344321672306067630")
	commitment[1] = GetBigInt("5419762390205054956331898344062244251848644102955422218391169170544501902555990302041123884645542922533383472932370440945559389537363421915859280453567542891282326293181873038525262647755751480510695174104444584096075426182028488007412702486834572504602017959713567115167530161879725119986902751548101301399513919564598077659334592810817817537980714139253559945924508827333167533684113678549139866768041389622467413944962974743445622648742173253815449019807499219669659707659436109532020359667766252249835834423614448803979115085843281561595265349121473518030930551646092508081700444598114095135978565779416655372661")
	commitment[2] = GetBigInt("3426227784828569580745805105029812741871307615024262782486894770383265693012328188658429706020552769765202002359152117249954449647501462132546249661159372635007494827793611214608903235847238862421989111343089021483028237010792858725549353655264036793871122408612461221210276184639146489820767229716648687028411062376325007192124323035389695216269458587303642797914107519629890693933171146941009003106226774664211633650334292018707903533633557807780422163898826281640676208998079895489686211837193136701469220322322206248889798753129522901882713111363921947466394178665278457937309058955788205639013021320254170197955")
	commitment[3] = GetBigInt("1686506631709559377200311945118642094266106138498517811296052041209740079953881710389311491099334851667299941138338789926225887198170335157634195355087885792161538333275049557236712779986539713546258086472245949708230127535213239245066774035888585276570786497170108440743273378071942907710493472798836552352453477400836085801725972991140017616873571491927987085773877661203285581927508576617692875006868790739646003840543789024777184041661322999730594215258115820434715203238305558235269092436019138295016208090056838983523352849042668677716764922352525002773761539934238927454927207937576041227667780061958896435992")
	return commitment[:]
}

func TestValidRangeProof(t *testing.T) {
	lowerBound := new(big.Int).SetInt64(1991)
	upperBound := new(big.Int).SetInt64(2000)
	startTime := time.Now()
	commitment := GetValidCommitment()
	commitTime := time.Now()
	fmt.Println("Commit time:")
	fmt.Println(commitTime.Sub(startTime))
	proof := GetValidProof()
	proofTime := time.Now()
	fmt.Println("Get Proof time:")
	fmt.Println(proofTime.Sub(commitTime))
	if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
		verifyTime := time.Now()
		fmt.Println("Verify time:")
		fmt.Println(verifyTime.Sub(proofTime))
		t.Log("ValidateRangeProof pass")
		if !ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("First verification passed, second failed")
		}
	} else {
		t.Error("Assert failure: expected true, actual: false")
	}
}

func TestInvalidRangeProofs(t *testing.T) {
	lowerBound := new(big.Int).SetInt64(1991)
	upperBound := new(big.Int).SetInt64(2000)
	commitment := GetValidCommitment()
	proof := GetValidProof()

	for i := range commitment {
		fmt.Println("Modifying commitment field ", i)
		realValue := commitment[i]
		commitment[i] = new(big.Int).SetInt64(1)
		if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("Modified range proof should fail")
		}
		commitment[i] = new(big.Int).SetInt64(0)
		if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("Modified range proof should fail")
		}
		commitment[i] = proof[0]
		if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("Modified range proof should fail")
		}
		commitment[i] = realValue
	}

	for i := range proof {
		fmt.Println("Modifying field ", i)
		realValue := proof[i]
		proof[i] = new(big.Int).SetInt64(1)
		if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("Modified range proof should fail")
		}
		proof[i] = new(big.Int).SetInt64(0)
		if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("Modified range proof should fail")
		}
		proof[i] = commitment[0]
		if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
			t.Error("Modified range proof should fail")
		}
		proof[i] = realValue
	}

	fmt.Println("Modifying lower bound")
	lowerBound = new(big.Int).SetInt64(11)

	if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
		t.Error("Modified range proof should fail")
	}
	lowerBound = new(big.Int).SetInt64(1999)

	fmt.Println("Modifying upper bound")
	upperBound = new(big.Int).SetInt64(1995)

	if ValidateRangeProof(lowerBound, upperBound, commitment, proof) {
		t.Error("Modified range proof should fail")
	}
}
